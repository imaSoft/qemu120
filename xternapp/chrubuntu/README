
README
=========
  this file.


README-prepare
======================
  getting the chromebook into the developer mode.


install-ubuntu-1204-9.sh
README-cr48-blog
==========================
  https://cr-48-ubuntu.googlecode.com/files/install-ubuntu-1204-9.sh  jan 2 2013
    redirected from http://goo.gl/tnyga
    see README-cr48-blog


arm-chrubuntu-3.sh
README-sd-blog
======================
  http://cr-48-ubuntu.googlecode.com/files/arm-chrubuntu-3.sh  jan 2 2013
    redirected from http://goo.gl/34v87
    see README-sd-blog
    Note: acer c7 cannot boot off a sd card. it does off a usb stick.


chrubuntu-install.txt
======================
  http://googledrive.com/host/0B0YvUuHHn3MndlNDbXhPRlB2eFE/chrubuntu-install.txt  aug 22 2013
    redirected from http://goo.gl/s9ryd
    usage: <command>  [flavor] [version] [target-disk]
      flavor: 
               default  (ubuntu-desktop on x86, xubuntu-desktop on arm)
               kubuntu-desktop
               lubuntu-desktop
               xubuntu-desktop
               edubuntu-desktop
               ubuntu-standard    (no GUI installed)
      version:
               lts -- latest LTS Ubuntu release, 12.04.2 as of this writing
               latest -- latest official release, 13.04 as of this writing
               dev -- unstable development Ubuntu release, daily alpha build of 
                      Saucy Salamander 13.10 as of this writing <-- Experts only! 
                      If this breaks, don't be surprised
               12.10 -- Ubuntu 12.10 release

      target-disk is the last argument (specify "default" and "latest" for 
               the first two arguments if you just want to install the defaults 
               to an external drive). An example installation to SD Card might be:
                  sudo bash s9ryd default latest /dev/mmcblk1

    see the blog http://chromeos-cr48.blogspot.ca/2013/05/chrubuntu-one-script-to-rule-them-all_31.html


Track pad reference fix
======================
  https://github.com/jbdatko/chrubuntu_trackpad


how-to-boot-ubunto-on-a-cr-48.pdf
===================================
  http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/cr-48-chrome-notebook-developer-information/how-to-boot-ubuntu-on-a-cr-48
    see the pdf file. general information.


README-vm-blog
======================
  run chrome os inside a vm.


ubuntu-build-general-howto
============================
  Instruction by Olof Johansson how to build a kernel on a chromebook.


ubuntu-build-inbox-howto
ubuntu-build-inbox-script
ubuntu-kernel-for-acer-c7.sh
ubuntu-kernel-for-acer-c7-fix
===============================
  Instructions and scrits to build a new kernel inside a chromebook linux installation.
  With some fixes.


debian-acerc7-forum.pdf
===============================
  General instructions to install any Linux distro.
  It mentions the origin is here:
    http://chromebooklinux.blogspot.ca/2013/08/usb-bootable-media-toolbox.html

  http://forums.debian.net/viewtopic.php?f=30&t=103827
  Getting Debian on Acer C7 Chromebook

  To identify the current rootfs & kernel partitions:
    $ rootdev -s

  The kernel is one before the rootfs partition. Example:
    $ rootdev -s
      /dev/sda3
    $ dd if=/dev/sda2 of=kernel_2.blob
    $ dump_kernel_config kernel_2.blob > kernel_2.cfg
    $ cp kernel_2.cfg kernel_debug.cfg

  Replace the contents of kernel_debug.cfg with the following:
        add_efi_memmap
        boot=local
        console=tty1
        disablevmx=off
        i915.modeset=1
        init=/sbin/init
        kern_guid=%U
        loglevel=7
        lsm.module_locking=0
        ro
        root=PARTUUID=%U/PARTNROFF=1
        rootwait
        tpm_tis.force=1

  Wrap the new kernel with the verified block and the new config:
    $ vbutil_kernel --repack kernel_debug.blob \
        --keyblock /usr/share/vboot/devkeys/kernel.keyblock \
        --version 1 \
        --signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk \
        --config=kernel_debug.cfg \
        --oldblob kernel_2.blob

    $ vbutil_kernel --verify kernel_debug.blob
    $ dd if=/kernel_debug.blob of=/dev/mmcblk0p6
    $ cgpt add /dev/mmcblk0 -i 6 -P 1 -T 1

  Copy the necessary stuff from the current Chrome OS rootfs to partition #7.
    Include the following complete folders:
        /lib/firmware
        /lib/modules
        /usr/share/vboot

  And these files as well:
        /usr/bin/cgpt
        /usr/bin/dump_kernel_config
        /usr/bin/vbutil_*

  Cross your fingers, reboot & attempt to boot from USB. If it boots,
  reprioritize partition #6 and mark it as having booted successfully.
    $ cgpt add /dev/sdb -i 6 -P 1 -T 0 -S 1


chrolin/
==========
  The package downloaded from chromebook-linux.com. Removed all the binary files.


Minimal Fedora 19
===================
  ""
  "Things to do with the minimal fedora 19: "
  "  Install pkgs: openssh-server, net-tools, system-config-firewall-tui"
  "  Disable fw:   systemctl stop firewalld.service"
  ""
  "  Install lxde: yum install @lxde-desktop"
  "  Set LXDE as default for LXDM: "
  "      cd /etc/systemd/system; rm display-manager.service ;"
  "      ln -s /usr/lib/systemd/system/lxdm.service display-manager.service"

  ""
  "  Install more packages for x: "
  "      yum install xorg-x11-server-Xorg xterm xorg-x11-xinit xorg-x11-drv-evdev"
  "    (If on a laptop where the touchpad works with synaptics, add xorg-x11-drv-synaptics)"
  "  Install a window manager, e.g. yum install openbox. dbus-x11 too."

  ""
  "  Or get a new image from scratch to have a minimal Fedora with only LXDE:"
  "    - use Netinstall image"
  "    - chose "minimal" and "customise now", then only 4 bundle of packages: "
  "      LXDE and Window managers, and in base system Fonts and X Window System"


